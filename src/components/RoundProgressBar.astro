---
const { max, current, label, size = 192, strokeWidth = 20 } = Astro.props
const value = (current / max) * 100
const radius = size / 2 - strokeWidth / 2
const circumference = 2 * Math.PI * radius
const dashoffset = circumference * (1 - value / 100)
---

<div class="flex justify-center items-center">
  <div class={`relative w-[${size}px] h-[${size}px] rounded-full border border-blue-500`}>
    <svg
      class="relative w-full h-full"
      width={size}
      height={size}
      style="transform: rotate(-90deg);"
    >
      <circle
        class="w-full h-full fill-transparent stroke-gray-800"
        stroke-width={strokeWidth}
        cx={size / 2}
        cy={size / 2}
        r={radius}
        stroke-linecap="round"
      ></circle>
      <circle
        class="w-full h-full fill-transparent stroke-sky-600"
        stroke-width={strokeWidth}
        cx={size / 2}
        cy={size / 2}
        r={radius}
        stroke-linecap="round"
        stroke-dasharray={circumference}
        stroke-dashoffset={dashoffset}
        style="transition: stroke-dashoffset 0.5s;"
      ></circle>
    </svg>
    <div class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center">
      <h2 class="text-5xl font-bold text-slate-500 mb-2">${Math.round(current)}</h2>
      <h3 class="text-sm">{label}</h3>
    </div>
  </div>
</div>

<!-- Dasharray length calculation: circumference = radius * 2 * PI  -->
<!-- Source: https://css-tricks.com/building-progress-ring-quickly/ -->
